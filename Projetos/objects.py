import numpy as np

SET_POSITION_HEARTHS = 0

hearts = [
    ### Frente
    # Esquerda
    (+0.0, +0.0, +0.0),
    (-1.0, +3.0, +0.0),
    (-2.0, +2.0, +0.0),
    (+0.0, +2.0, +0.0),
    (+0.0, +0.0, +0.0),
    
    # Direita
    (+0.0, +0.0, +0.0),
    (+1.0, +3.0, +0.0),
    (+2.0, +2.0, +0.0),
    (+0.0, +2.0, +0.0),
    (+0.0, +0.0, +0.0),
    
    ### Trás
    (+0.0, +0.0, -0.5),
    (-1.0, +3.0, -0.5),
    (-2.0, +2.0, -0.5),
    (+0.0, +2.0, -0.5),
    (+0.0, +0.0, -0.5),
    
    # Direita
    (+0.0, +0.0, -0.5),
    (+1.0, +3.0, -0.5),
    (+2.0, +2.0, -0.5),
    (+0.0, +2.0, -0.5),
    (+0.0, +0.0, -0.5),
    
    ## Preenchendo Retângulos
    # Esquerda Superior
    (+0.0, +2.0, +0.0),  
    (-1.0, +3.0, +0.0),  
    (-1.0, +3.0, -0.5),  

    (+0.0, +2.0, +0.0),  
    (-1.0, +3.0, -0.5),  
    (+0.0, +2.0, -0.5), 
    
    # Direita Duperior
    (+0.0, +2.0, +0.0),  
    (+1.0, +3.0, +0.0),  
    (+1.0, +3.0, -0.5),  

    (+0.0, +2.0, +0.0),  
    (+1.0, +3.0, -0.5),  
    (+0.0, +2.0, -0.5), 
    
    # Esquerda meio
    (-1.0, +3.0, +0.0),
    (-2.0, +2.0, +0.0),
    (-2.0, +2.0, -0.5),
    
    (-2.0, +2.0, -0.5),
    (-1.0, +3.0, -0.5),
    (-1.0, +3.0, +0.0),
    
    # Direita meio
    (+1.0, +3.0, +0.0),
    (+2.0, +2.0, +0.0),
    (+2.0, +2.0, -0.5),
    
    (+2.0, +2.0, -0.5),
    (+1.0, +3.0, -0.5),
    (+1.0, +3.0, +0.0),
    
    # Esquerda inferior
    (+0.0, +0.0, +0.0),
    (+0.0, +0.0, -0.5),
    (-2.0, +2.0, -0.5),
    
    (-2.0, +2.0, -0.5),
    (-2.0, +2.0, +0.0),
    (+0.0, +0.0, +0.0),
    
    # Esquerda inferior
    (+0.0, +0.0, +0.0),
    (+0.0, +0.0, -0.5),
    (+2.0, +2.0, -0.5),
    
    (+2.0, +2.0, -0.5),
    (+2.0, +2.0, +0.0),
    (+0.0, +0.0, +0.0),
]

SET_POSITION_SPADES = len(hearths)

spades = [
    #### Frente
    # Triângulo Menor
    (-1.0, +0.0, +0.0),  
    (+1.0, +0.0, +0.0),  
    (+0.0, +1.0, +0.0),
      
    # Triângulo Maior
    (-2.0, +1.0, +0.0),  
    (+0.0, +4.0, +0.0),  
    (+2.0, +1.0, +0.0),  
    
    #### Trás
    # Triângulo Menor
    (-1.0, +0.0, -0.5),  
    (+1.0, +0.0, -0.5),  
    (+0.0, +1.0, -0.5),  
    
    # Triângulo Maior
    (-2.0, +1.0, -0.5),  
    (+0.0, +4.0, -0.5),  
    (+2.0, +1.0, -0.5), 
    
    #### Preenchendo retângulos
    ## Triãngulo menor
    # Baixo
    (-1.0, +0.0, +0.0),  
    (-1.0, +0.0, -0.5),  
    (+1.0, +0.0, +0.0),  
    (+1.0, +0.0, -0.5),  
    
    # Esquerda
    (-1.0, +0.0, +0.0), 
    (-1.0, +0.0, -0.5),  
    (+0.0, +1.0, +0.0),  
    (+0.0, +1.0, -0.5),
    
    # Direita
    (+1.0, +0.0, +0.0),  
    (+1.0, +0.0, -0.5),  
    (+0.0, +1.0, +0.0), 
    (+0.0, +1.0, -0.5),
    
    ## Triãngulo maior
    # Baixo
    (-2.0, 1.0,  0.0),  
    (-2.0, 1.0, -0.5),  
    ( 2.0, 1.0,  0.0),  
    ( 2.0, 1.0, -0.5),  
    
    # Esquerda
    (-2.0, +1.0, +0.0),  
    (-2.0, +1.0, -0.5), 
    (+0.0, +4.0, +0.0),  
    (+0.0, +4.0, -0.5),
    
    # Direita
    (+2.0, +1.0, +0.0),  
    (+2.0, +1.0, -0.5),  
    (+0.0, +4.0, +0.0), 
    (+0.0, +4.0, -0.5),
]

SET_POSITION_DIAMONDS = len(hearths) + len(spades)

diamonds = [
    #### Base
    # Triângulo 1
    (-1.0, +0.0, +1.0),
    (-1.0, +0.0, -1.0),
    (+0.0, +1.0, +0.0),
    
    # Triângulo 2
    (+1.0, +0.0, +1.0),
    (+1.0, +0.0, -1.0),
    (+0.0, +1.0, +0.0),
    
    # Triângulo 3
    (-1.0, +0.0, +1.0),
    (+1.0, +0.0, +1.0),
    (+0.0, -1.0, +0.0),
    
    # Triângulo 4
    (-1.0, +0.0, -1.0),
    (+1.0, +0.0, -1.0),
    (+0.0, -1.0, +0.0),
    
    # Triângulo 5
    (-1.0, +0.0, +1.0),
    (+1.0, +0.0, +1.0),
    (+0.0, +1.0, +0.0),
    
    # Triângulo 6
    (-1.0, +0.0, -1.0),
    (+1.0, +0.0, -1.0),
    (+0.0, +1.0, +0.0),
    
    # Triângulo 7
    (-1.0, +0.0, +1.0),
    (-1.0, +0.0, -1.0),
    (+0.0, -1.0, +0.0),
    
    # Triângulo 8
    (+1.0, +0.0, +1.0),
    (+1.0, +0.0, -1.0),
    (+0.0, -1.0, +0.0),
    
 
]

VERTEXES = np.zeros(0, [("position", np.float32, 3)])

for obj in [hearths, spades, diamonds]:
    for o in obj:
        new_vertex = np.array([((o),)], dtype=[("position", np.float32, 3)])
        VERTEXES = np.append(VERTEXES, new_vertex)